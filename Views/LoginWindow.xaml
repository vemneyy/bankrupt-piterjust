<Window x:Class="bankrupt_piterjust.Views.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:bankrupt_piterjust.ViewModels"
        xmlns:conv="clr-namespace:bankrupt_piterjust.Converters"
        mc:Ignorable="d"
        Title="Авторизация" Height="450" Width="400"
        WindowStartupLocation="CenterScreen" ResizeMode="NoResize"
        Background="#F8F9FA">
    
    <Window.DataContext>
        <vm:LoginViewModel/>
    </Window.DataContext>
    
    <Window.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Styles -->
        <Style x:Key="HeaderTextBlock" TargetType="TextBlock">
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
            <Setter Property="Foreground" Value="#212529"/>
        </Style>
        
        <Style x:Key="FormTextBlock" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5,0,2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="#495057"/>
        </Style>
        
        <Style x:Key="FormTextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="0,2,0,10"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#A9A9A9"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#007BFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="#007BFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0069D9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0062CC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#6C757D"/>
                                <Setter Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,9"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#F8F9FA"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#A9A9A9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E2E6EA"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#A9A9A9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border Background="White" Margin="20" CornerRadius="6" Padding="25">
        <Grid>
            <StackPanel>
                <TextBlock Text="Авторизация" Style="{StaticResource HeaderTextBlock}"/>
                
                <TextBlock Text="Фамилия *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding LastName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource FormTextBox}"/>
                
                <TextBlock Text="Имя *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource FormTextBox}"/>
                
                <TextBlock Text="Отчество" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding MiddleName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource FormTextBox}"/>
                
                <TextBlock Text="Должность *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding Position, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource FormTextBox}"/>
                
                <TextBlock Text="* Обязательные поля" Foreground="#6C757D" Margin="0,10,0,20"/>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Button Grid.Column="0" Content="Отмена" Height="42" Margin="0,0,5,0" 
                            Command="{Binding CancelCommand}" 
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SecondaryButton}"/>
                    
                    <Button Grid.Column="1" Content="Войти" Height="42" Margin="5,0,0,0" 
                            Command="{Binding LoginCommand}" 
                            Style="{StaticResource PrimaryButton}"
                            IsEnabled="{Binding CanLogin}"/>
                </Grid>
            </StackPanel>
            
            <!-- Busy indicator -->
            <Grid Background="#80000000" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Выполняется вход..." Foreground="White" FontSize="16" FontWeight="Medium" Margin="0,0,0,15"/>
                    <ProgressBar IsIndeterminate="True" Width="200" Height="8"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>