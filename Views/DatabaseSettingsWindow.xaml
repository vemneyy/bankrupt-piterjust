<Window x:Class="bankrupt_piterjust.Views.DatabaseSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:bankrupt_piterjust.ViewModels"
        xmlns:conv="clr-namespace:bankrupt_piterjust.Converters"
        mc:Ignorable="d"
        Title="Настройки подключения к базе данных" Height="640" Width="450"
        WindowStartupLocation="CenterOwner" ResizeMode="NoResize"
        Background="#F8F9FA" Icon="/fav.png"
        ShowInTaskbar="False">

    <Window.DataContext>
        <vm:DatabaseSettingsViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!-- Converters -->
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Styles -->
        <Style x:Key="HeaderTextBlock" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
            <Setter Property="Foreground" Value="#212529"/>
        </Style>

        <Style x:Key="FormTextBlock" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5,0,2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="#495057"/>
        </Style>

        <Style x:Key="FormTextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="0,2,0,10"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#A9A9A9"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#007BFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="#007BFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0069D9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0062CC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#6C757D"/>
                                <Setter Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,9"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#F8F9FA"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#A9A9A9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E2E6EA"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#A9A9A9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TestButton" TargetType="Button">
            <Setter Property="Background" Value="#28A745"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,9"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#218838"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#1E7E34"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#6C757D"/>
                                <Setter Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border Background="White" CornerRadius="6" Padding="25" Height="620" VerticalAlignment="Top">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10" Height="34" RenderTransformOrigin="0.5,0.726"/>
            </StackPanel>

            <!-- Form -->
            <StackPanel Grid.Row="1">
                <TextBlock Text="Адрес сервера *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding DatabaseConfiguration.Host, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource FormTextBox}"/>

                <TextBlock Text="Порт *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding DatabaseConfiguration.Port, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource FormTextBox}"/>

                <TextBlock Text="Имя базы данных *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding DatabaseConfiguration.Database, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource FormTextBox}"/>

                <TextBlock Text="Имя пользователя *" Style="{StaticResource FormTextBlock}"/>
                <TextBox Text="{Binding DatabaseConfiguration.Username, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource FormTextBox}"/>

                <TextBlock Text="Пароль *" Style="{StaticResource FormTextBlock}"/>
                <PasswordBox Height="36"
                             Margin="0,2,0,10"
                             Padding="10,8"
                             FontSize="13"
                             VerticalContentAlignment="Center"
                             Background="White"
                             BorderBrush="#CED4DA"
                             BorderThickness="1"
                             PasswordChanged="PasswordBox_PasswordChanged">
                    <PasswordBox.Style>
                        <Style TargetType="PasswordBox">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#A9A9A9"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#007BFF"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </PasswordBox.Style>
                </PasswordBox>

                <TextBlock Text="* Обязательные поля" Foreground="#6C757D" Margin="0,10,0,20"/>

                <!-- Test connection button -->
                <Button Content="Проверить подключение" Height="40" 
                        Command="{Binding TestConnectionCommand}" 
                        Style="{StaticResource TestButton}"
                        IsEnabled="{Binding CanTestConnection}" 
                        Margin="0,0,0,15"/>
            </StackPanel>

            <!-- Buttons -->
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                <Button Content="Сохранить" Width="100" Height="36" 
                        Command="{Binding SaveCommand}" 
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                        Style="{StaticResource PrimaryButton}"
                        Margin="0,0,10,0"/>

                <Button Content="Отмена" Width="100" Height="36" 
                        Command="{Binding CancelCommand}" 
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                        Style="{StaticResource SecondaryButton}"/>
            </StackPanel>

            <!-- Busy indicator -->
            <Grid Grid.Row="0" Grid.RowSpan="3" Background="#80000000" 
                  Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding BusyMessage}" Foreground="White" FontSize="16" FontWeight="Medium" Margin="0,0,0,15"/>
                    <ProgressBar IsIndeterminate="True" Width="200" Height="8"/>
                </StackPanel>
            </Grid>
            <TextBlock Text="Настройки подключения к базе данных" Style="{StaticResource HeaderTextBlock}" VerticalAlignment="Top" Margin="0,3,0,0"/>
        </Grid>
    </Border>
</Window>